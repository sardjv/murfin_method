version: '3.7'

services:
  db:
    image: 'mysql:8.0.19'
    restart: always
    volumes:
      - 'db:/var/lib/mysql'
    env_file:
      - '.env'
    environment:
      - MYSQL_DATABASE=murfin_method_production

  docs:
    image: awesometic/docusaurus
    ports:
      - '3002:80'
    volumes:
      - './docs:/docusaurus'
    environment:
      - WEBSITE_NAME=docs

  redis:
    image: 'redis:6.0.9-alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    depends_on:
      - redis_helper
    sysctls:
      # This removes 'WARNING: /proc/sys/net/core/somaxconn is set to the lower value of 128'
      # Explanation of what this setting does: https://groups.google.com/d/msg/redis-db/ftmlTjEPv98/HwkJguxTCwAJ
      net.core.somaxconn: '511'
    volumes:
      - 'redis:/data'
    env_file:
      - '.env'
    restart: always

  # Fix Redis 'WARNING you have Transparent Huge Pages (THP) support'.
  # From: https://stackoverflow.com/a/58090841
  # More details: https://easyengine.io/tutorials/redis/
  redis_helper:
    image: busybox:1.32.0
    command: sh -c "echo never > /sys/kernel/mm/transparent_hugepage/enabled"
    privileged: true

  app:
    depends_on:
      - db
      - redis
    build: .
    # 1) Remove any existing server process in case of dirty shutdown, with -f in case the file doesn't exist.
    # 2) if `bundle check` indicates it's needed, `bundle install` here rather than in Dockerfile,
    #    so that we can cache its result in the bundle_cache container.
    # 3) Start server.
    command: ./script/start_rails_production.sh
    ports:
      - '3000:3000'
    volumes:
      - '.:/app'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - RAILS_MAX_THREADS=5 # See config/puma.rb for more info.
      - WEB_CONCURRENCY=2 # See config/puma.rb for more info.
      - RAILS_SERVE_STATIC_FILES=true
    env_file:
      - '.env'
    restart: always

  sidekiq:
    depends_on:
      - 'db'
      - 'redis'
    build: .
    command: ./script/start_sidekiq.sh
    volumes:
      - '.:/app'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
    env_file:
      - '.env'
    restart: always

volumes:
  redis:
  db:
