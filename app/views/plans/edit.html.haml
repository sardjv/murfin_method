.container.my-4
  .row
    .col-8
      %h5= @plan.persisted? ? @plan.name : I18n.t('actions.add', model_name: Plan.model_name.human.titleize)
    .col-4
      %h1.text-white
        %span{ class: state_badge_class(@plan) }= display_state(@plan)
      - if @plan.persisted?
        = link_to download_plan_path(@plan, format: :pdf), class: 'btn btn-primary float-right mr-2' do
          = t('actions.download')
          = icon('download')

  .row
    .col-12
      = bootstrap_form_for @plan do |f|
        - if policy(@plan).change_user?
          = f.select :user_id, options_for_select(User.order(:first_name).all.map { |t| [t.name, t.id] },
                                selected: f.object.user_id || current_user.id),
                                { wrapper: { class: 'plan-user-id-form-group' }, hide_label: true, class: 'input-group-btn', required: true }
        - else
          = f.hidden_field :user_id, value: f.object.user_id || current_user.id

        .row
          = f.text_field :start_date, wrapper: { class: 'col-md-3 plan-start-date-container' }, help: t('plans.hints.start_date'),
                          autocomplete: 'off', 'data-behaviour-flatpickr': true, disabled: !policy(@plan).update?
          = f.text_field :end_date, wrapper: { class: 'col-md-3 plan-end-date-container' }, help: t('plans.hints.end_date'),
                          autocomplete: 'off', 'data-behaviour-flatpickr': true, disabled: !policy(@plan).update?
        .row
          = f.number_field :contracted_seconds_per_week, label: Plan.human_attribute_name('contracted_hours_per_week'),
                            class: 'duration-picker-contracted-hours-per-week', step: :any,
                            wrapper: { class: 'col-md-6 plan-contracted-hours-per-week-wrapper' }

        -# NEW
        #plan-activities-card.activities-form.border.my-4.p-4
          %h6 Activites Simons' mockup
          .form-elements
            .form-group
              %label{:for => "category"} Category
              %select#category.form-control
                %option{:selected => "selected"} None
                %option DCC (Direct Clinical Care)
                %option SPA (Supporting Professional Activities)
            .form-group
              %label{:for => "subcategory"} Subcategory
              %select#subcategory.form-control
                %option None
                %option Care Co-ordination
                %option Care Intervention Network
                %option{:selected => "selected"} CBT / Psychology Treatments
                %option Psychotherapy Treatments
                %option Family Therapy Treatments
                %option Psychiatry Treatment
                %option Initial Assessmet
                %option All Pathways
            .form-group
              %label{:for => "RiO"} Outcomed on RiO
              %select#RiO.form-control
                %option{:selected => "selected"} None
                %option Yes
                %option No
            .form-group
              %label{:for => "inputState"} Fourth select
              %select#inputState.form-control
                %option{:selected => "selected"} Fourth select
                %option ...
            .form-group
              %label.top-label{:for => "timeWorkedPerWeek"} Time worked per week
              .times-worked
                %input#inputHours.form-control
                %label{:for => "inputHours"} h
                %input#inputMinutes.form-control
                %label{:for => "inputMinutes"} m
                .icons
                  = link_to_remove_association f, title: t('actions.remove', model_name: f.object.class.name.humanize) do
                    = icon('trash')

          .form-elements
            .form-group
              %label{:for => "category"} Category
              %select#category.form-control
                %option{:selected => "selected"} None
                %option DCC (Direct Clinical Care)
                %option SPA (Supporting Professional Activities)
            .form-group
              %label{:for => "subcategory"} Subcategory
              %select#subcategory.form-control
                %option{:selected => "selected"} None
                %option Care Co-ordination
                %option Care Intervention Network
                %option CBT / Psychology Treatments
                %option Psychotherapy Treatments
                %option Family Therapy Treatments
                %option Psychiatry Treatment
                %option Initial Assessmet
                %option All Pathways
            .form-group
              %label{:for => "RiO"} Outcomed on RiO
              %select#RiO.form-control
                %option{:selected => "selected"} None
                %option Yes
                %option No
            .form-group
              %label{:for => "inputState"} Fourth select
              %select#inputState.form-control
                %option{:selected => "selected"} Fourth select
                %option ...
            .form-group
              %label{:for => "inputState"} Fifth select
              %select#inputState.form-control
                %option{:selected => "selected"} Fifth select
                %option ...
            .form-group
              %label{:for => "timeWorkedPerWeek"} Time worked per week
              .times-worked
                %input#inputHours.form-control
                %label{:for => "inputHours"} h
                %input#inputMinutes.form-control
                %label{:for => "inputMinutes"} m
                .icons
                  = link_to_remove_association f, title: t('actions.remove', model_name: f.object.class.name.humanize) do
                    = icon('trash')
          .form-buttons
            #plan-activities-list.btn.btn-primary.add_fields
              Add Activity
            #plan-total-time-worked-per-week.small
              Total time worked per week: 20h

        - # Simon' changes applied
        = render 'activities_card', plan: @plan, f: f

        -# OLD
        = render 'activities_card_old', plan: @plan, f: f

        = render 'totals_card', activity_tags_top_level: @activity_tags_top_level, activities: @activities if @plan.persisted?

        .border.my-4.p-4
          %label= Plan.human_attribute_name('signoffs')
          %table#plan-signoffs.table
            %tbody.signoffs.list
              = f.fields_for :signoffs, @plan.required_signoffs, wrapper: false, include_id: false do |signoff_form|
                = render 'signoff_fields', f: signoff_form

          - if policy(@plan).update?
            %div
              = link_to_add_association I18n.t('actions.add', model_name: Signoff.model_name.human.titleize), f, :signoffs,
                                        data: { 'association-insertion-node': 'tbody.signoffs', 'association-insertion-method': 'append' },
                                        class: 'btn btn-primary',
                                        render_options: { locals: { plan: @plan } }

        - if policy(@plan).update?
          = f.submit I18n.t('actions.save'), class: 'btn btn-primary mt-4'
        = link_to I18n.t('actions.cancel'), plans_path, class: 'btn btn-outline-secondary mt-4'
