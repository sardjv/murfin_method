#plan-activities-card.activities-form.border.my-4.p-4
  %h6
    = Plan.human_attribute_name('activities')
    REBUILD for Simon' changes
  #plan-activities-list
    = f.fields_for :activities, wrapper: false, include_id: false do |af|
      .form-elements
        = af.hidden_field :id
        = af.fields_for :tag_associations, af.object.active_tag_associations do |taf|
          - tag_type = taf.object.tag_type
          // tag_type.name.parameterize
          = taf.hidden_field :id
          = taf.hidden_field :tag_type_id
          = taf.select :tag_id,
                        tag_type.tags.map { |t| [t.name, t.id, { 'data-id': t.id, 'data-parent-id': t.parent_id }] },
                        { include_blank: t('prompts.none'), label: tag_type.name, hide_label: false },
                        { class: 'filter-child-select',
                          'data-tag-type-id': tag_type.id,
                          'data-tag-type-parent-id': tag_type.parent_id,
                          'data-size': TagTypeHelper.visible_options_count(tag_type),
                          disabled: !policy(taf.object.taggable).update? }
        .form-group
          %label{ for: 'seconds_per_week' }= Activity.human_attribute_name('duration')
          .times-worked
            = af.number_field :seconds_per_week, { class: 'duration-picker-activity', label: false, step: :any, disabled: !policy(plan).update?, wrapper: false }
            - af.object.errors.full_messages_for(:duration).each do |error|
              .error.text-danger.small= error
            .icons
              = link_to_remove_association f, title: t('actions.remove', model_name: f.object.class.name.humanize) do
                = icon('trash')

  .form-buttons
    - if policy(plan).update?
      = link_to_add_association t('actions.add', model_name: Activity.model_name.human.titleize), f, :activities,
                                data: { 'association-insertion-node': '#plan-activities-list', 'association-insertion-method': 'append' },
                                class: 'btn btn-primary', render_options: { locals: { plan: plan } }
    - if @plan.activities.any?
      #plan-total-time-worked-per-week.small
        = t 'plans.total_time_worked_per_week', total: duration_in_words(plan.total_minutes_worked_per_week, :short)

    - if plan_show_contracted_hours_error?(plan)
      .alert.alert-warning= t('plans.errors.total_time_worked_per_week_higher_than_contracted')
