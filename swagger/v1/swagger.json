{
  "swagger": "2.0",
  "info": {
    "title": "Murfin+ API",
    "version": "v1",
    "description": "This is the Murfin+ API. For more information visit\n                        <a href=\"https://github.com/sardjv/murfin_method\">\n                        github.com/sardjv/murfin_method</a>."
  },
  "securityDefinitions": {
    "JWT": {
      "description": "The JSON Web Token from Auth0 for authentication.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/api/v1/memberships": {
      "post": {
        "summary": "create membership",
        "tags": [
          "Memberships"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "membership",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/membership_post_params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Membership created",
            "schema": {
              "$ref": "#/definitions/membership_response"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error_400"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      }
    },
    "/api/v1/memberships/{id}": {
      "delete": {
        "summary": "destroy membership",
        "tags": [
          "Memberships"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK: No Content"
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          }
        }
      }
    },
    "/api/v1/plans/{id}": {
      "get": {
        "summary": "get plan",
        "tags": [
          "Plans"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "activities"
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "responses": {
          "200": {
            "description": "Showing plan",
            "schema": {
              "$ref": "#/definitions/plan_response_with_relationships"
            }
          },
          "404": {
            "description": "Record not found"
          },
          "406": {
            "description": "Unsupported accept header"
          }
        }
      }
    },
    "/api/v1/plans": {
      "get": {
        "summary": "get plans",
        "tags": [
          "Plans"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "page[number]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "filter[user_id]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "activities"
          }
        ],
        "responses": {
          "200": {
            "description": "Plans index",
            "schema": {
              "$ref": "#/definitions/plans_response"
            }
          }
        }
      }
    },
    "/api/v1/tag_associations": {
      "post": {
        "summary": "create tag association",
        "tags": [
          "TagAssociations"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "tag_association",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/tag_association_post_params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tag Association created",
            "schema": {
              "$ref": "#/definitions/tag_association_response"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      }
    },
    "/api/v1/tag_associations/{id}": {
      "delete": {
        "summary": "destroys tag association",
        "tags": [
          "TagAssociations"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK: No Content"
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          }
        }
      }
    },
    "/api/v1/tag_types": {
      "post": {
        "summary": "create tag type",
        "tags": [
          "TagTypes"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "tag_type",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/tag_type_post_params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tag Type created",
            "schema": {
              "$ref": "#/definitions/tag_type_post_params"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      },
      "get": {
        "summary": "get tag types",
        "tags": [
          "TagTypes"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "page[number]",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Tag Types index",
            "schema": {
              "$ref": "#/definitions/tag_types_response"
            }
          }
        }
      }
    },
    "/api/v1/tag_types/{id}": {
      "delete": {
        "summary": "destroy tag type",
        "tags": [
          "TagTypes"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK: No Content"
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "423": {
            "description": "Error: Locked Resource",
            "schema": {
              "$ref": "#/definitions/error_423"
            }
          }
        }
      },
      "get": {
        "summary": "get tag type",
        "tags": [
          "TagTypes"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "responses": {
          "200": {
            "description": "Showing tag type",
            "schema": {
              "$ref": "#/definitions/tag_type_response"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "406": {
            "description": "Unsupported accept header",
            "schema": {
              "$ref": "#/definitions/error_406"
            }
          }
        }
      },
      "patch": {
        "summary": "update tag",
        "tags": [
          "TagTypes"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "tag_type",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/tag_type_patch_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Tag updated",
            "schema": {
              "$ref": "#/definitions/tag_type_patch_params"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      }
    },
    "/api/v1/tags": {
      "post": {
        "summary": "create tag",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/tag_post_params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tag created",
            "schema": {
              "$ref": "#/definitions/tag_post_params"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      },
      "get": {
        "summary": "get tags",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "page[number]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "filter[tag_type_id]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "filter[parent_id]",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Tags index",
            "schema": {
              "$ref": "#/definitions/tags_response"
            }
          }
        }
      }
    },
    "/api/v1/tags/{id}": {
      "delete": {
        "summary": "destroys tag",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK: No Content"
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "422": {
            "description": "Error: Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      },
      "get": {
        "summary": "get tag",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "responses": {
          "200": {
            "description": "Showing tag type",
            "schema": {
              "$ref": "#/definitions/tag_response"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "406": {
            "description": "Unsupported accept header",
            "schema": {
              "$ref": "#/definitions/error_406"
            }
          }
        }
      },
      "patch": {
        "summary": "update tag",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "tag",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/tag_patch_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Tag updated",
            "schema": {
              "$ref": "#/definitions/tag_patch_params"
            }
          }
        }
      }
    },
    "/api/v1/time_ranges": {
      "post": {
        "summary": "create time range",
        "tags": [
          "TimeRanges"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/time_range_post_params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Time Range created",
            "schema": {
              "$ref": "#/definitions/time_range_response_with_relationships"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      },
      "get": {
        "summary": "get time ranges",
        "tags": [
          "TimeRanges"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "page[number]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "filter[appointment_id]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "filter[user_id]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "filter[time_range_type_id]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "tags"
          }
        ],
        "responses": {
          "200": {
            "description": "Time Ranges index",
            "schema": {
              "$ref": "#/definitions/time_ranges_response"
            }
          }
        }
      }
    },
    "/api/v1/time_ranges/{id}": {
      "get": {
        "summary": "get time range",
        "tags": [
          "TimeRanges"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "tags"
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "responses": {
          "200": {
            "description": "Showing time range",
            "schema": {
              "$ref": "#/definitions/time_range_response_with_relationships"
            }
          },
          "404": {
            "description": "Record not found"
          },
          "406": {
            "description": "Unsupported accept header"
          }
        }
      }
    },
    "/api/v1/user_groups": {
      "post": {
        "summary": "create user group",
        "tags": [
          "UserGroups"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "user_group",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_group_post_params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Group created",
            "schema": {
              "$ref": "#/definitions/user_group_post_params"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      },
      "get": {
        "summary": "get user groups",
        "tags": [
          "UserGroups"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "page[number]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "filter[name]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "filter[group_type_id]",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "User Groups index",
            "schema": {
              "$ref": "#/definitions/user_groups_response"
            }
          }
        }
      }
    },
    "/api/v1/user_groups/{id}": {
      "delete": {
        "summary": "destroy user group",
        "tags": [
          "UserGroups"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK: No Content"
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          }
        }
      },
      "get": {
        "summary": "get user group",
        "tags": [
          "UserGroups"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "responses": {
          "200": {
            "description": "Showing tag type",
            "schema": {
              "$ref": "#/definitions/user_group_response"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "406": {
            "description": "Unsupported accept header",
            "schema": {
              "$ref": "#/definitions/error_406"
            }
          }
        }
      },
      "patch": {
        "summary": "update user group",
        "tags": [
          "UserGroups"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "user_group",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_group_patch_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: User Group updated",
            "schema": {
              "$ref": "#/definitions/user_group_patch_params"
            }
          },
          "422": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "summary": "create user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_post_params"
            }
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_post_params"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/user_response_with_relationships"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/error_422"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "schema": {
              "$ref": "#/definitions/error_400"
            }
          }
        }
      },
      "get": {
        "summary": "get users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "page[number]",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "user_groups"
          },
          {
            "name": "filter[email]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "filter[epr_uuid]",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Users index",
            "schema": {
              "$ref": "#/definitions/users_response"
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "delete": {
        "summary": "destroy user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK: No Content"
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "423": {
            "description": "Error: Record Locked"
          }
        }
      },
      "get": {
        "summary": "get user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "include",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "user_groups"
          }
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "responses": {
          "200": {
            "description": "Showing user",
            "schema": {
              "$ref": "#/definitions/user_response_with_relationships"
            }
          },
          "404": {
            "description": "Record not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          },
          "406": {
            "description": "Unsupported accept header",
            "schema": {
              "$ref": "#/definitions/error_406"
            }
          }
        }
      },
      "patch": {
        "summary": "update user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT": {
            }
          }
        ],
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user_patch_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: User updated",
            "schema": {
              "$ref": "#/definitions/user_response_with_relationships"
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "schema": {
              "$ref": "#/definitions/error_400"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/error_403"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/error_404"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error_400": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Bad Request"
        }
      }
    },
    "error_401": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Unauthorized"
        }
      }
    },
    "error_403": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Forbidden"
        }
      }
    },
    "error_404": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Record not found"
              },
              "detail": {
                "type": "string",
                "example": "The record identified by 123 could not be found."
              },
              "code": {
                "type": "string",
                "example": "404"
              },
              "status": {
                "type": "string",
                "example": "404"
              }
            }
          }
        }
      }
    },
    "error_406": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Not acceptable"
              },
              "detail": {
                "type": "string",
                "example": "All requests must use the 'application/vnd.api+json' Accept without media type parameters. This request specified 'application/json'."
              },
              "code": {
                "type": "string",
                "example": "406"
              },
              "status": {
                "type": "string",
                "example": "406"
              }
            }
          }
        }
      }
    },
    "error_415": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Unsupported media type"
              },
              "detail": {
                "type": "string",
                "example": "All requests that create or update must use the 'application/vnd.api+json' Content-Type. This request specified 'application/json'."
              },
              "code": {
                "type": "string",
                "example": "415"
              },
              "status": {
                "type": "string",
                "example": "415"
              }
            }
          }
        }
      }
    },
    "error_422": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Invalid request"
        }
      }
    },
    "error_422_start_end_time": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "must occur after start time"
              },
              "detail": {
                "type": "string",
                "example": "end_time - must occur after start time"
              },
              "code": {
                "type": "string",
                "example": "100"
              },
              "status": {
                "type": "string",
                "example": "422"
              }
            }
          }
        }
      }
    },
    "error_422_password_too_short": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "title": "is too short (minimum is 6 characters)",
            "detail": "password - is too short (minimum is 6 characters)",
            "code": "100",
            "source": {
              "pointer": "/data/attributes/password"
            },
            "status": "422"
          }
        }
      }
    },
    "error_423": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Record Locked"
        }
      }
    },
    "membership_attributes": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "example": 1234,
          "x-nullable": false
        },
        "user_group_id": {
          "type": "integer",
          "example": 13,
          "x-nullable": false
        },
        "role": {
          "type": "string",
          "example": "member",
          "x-nullable": false
        }
      }
    },
    "membership_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "123"
            },
            "type": {
              "type": "string",
              "example": "memberships"
            },
            "attributes": {
              "$ref": "#/definitions/membership_attributes"
            }
          }
        }
      }
    },
    "membership_post_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "memberships"
            },
            "attributes": {
              "$ref": "#/definitions/membership_attributes"
            }
          },
          "required": [
            "user_id",
            "user_group_id",
            "role"
          ]
        }
      }
    },
    "plan_attributes": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "example": "2021-01-01",
          "x-nullable": false
        },
        "end_date": {
          "type": "string",
          "example": "2021-12-31",
          "x-nullable": false
        },
        "user_id": {
          "type": "integer",
          "example": 321,
          "x-nullable": false
        }
      }
    },
    "plans_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "plans"
              },
              "link": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "example": "https://job-plan-stats.herokuapp.com/api/v1/plans/1"
                  }
                }
              },
              "attributes": {
                "$ref": "#/definitions/plan_attributes"
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/plans?page[number]=1&page[size]=5"
            },
            "prev": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/plans?page[number]=1&page[size]=5"
            },
            "next": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/plans?page[number]=2&page[size]=5"
            },
            "last": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/plans?page[number]=5&page[size]=5"
            }
          }
        }
      }
    },
    "plan_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "plans"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/plans/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/plan_attributes"
            }
          }
        }
      }
    },
    "plan_response_with_relationships": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "plans"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/plans/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/plan_attributes"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "activities": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "321"
                          },
                          "type": {
                            "type": "string",
                            "example": "activities"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "tag_attributes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Lorem",
          "x-nullable": false
        },
        "tag_type_id": {
          "type": "integer",
          "example": 4567,
          "x-nullable": false
        },
        "parent_id": {
          "type": "integer",
          "example": 98765,
          "x-nullable": true
        },
        "default_for_filter": {
          "type": "boolean",
          "example": false,
          "x-nullable": false
        }
      }
    },
    "tags_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "tags"
              },
              "link": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "example": "https://job-plan-stats.herokuapp.com/api/v1/tags/1"
                  }
                }
              },
              "attributes": {
                "$ref": "#/definitions/tag_attributes"
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tags?page[number]=1&page[size]=5"
            },
            "prev": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tags?page[number]=1&page[size]=5"
            },
            "next": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tags?page[number]=2&page[size]=5"
            },
            "last": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tags?page[number]=5&page[size]=5"
            }
          }
        }
      }
    },
    "tag_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "tags"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/tags/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/tag_attributes"
            }
          }
        }
      }
    },
    "tag_post_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "tags"
            },
            "attributes": {
              "$ref": "#/definitions/tag_attributes"
            }
          }
        }
      }
    },
    "tag_patch_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "tags"
            },
            "attributes": {
              "$ref": "#/definitions/tag_attributes"
            }
          }
        }
      }
    },
    "tag_association_attributes": {
      "type": "object",
      "properties": {
        "tag_id": {
          "type": "integer",
          "required": false,
          "example": 100,
          "x-nullable": true
        },
        "tag_type_id": {
          "type": "integer",
          "required": true,
          "example": 200,
          "x-nullable": false
        },
        "taggable_id": {
          "type": "integer",
          "required": false,
          "example": 123,
          "x-nullable": false
        },
        "taggable_type": {
          "type": "string",
          "required": false,
          "example": "TimeRange",
          "x-nullable": false
        }
      }
    },
    "tag_association_post_attributes": {
      "type": "object",
      "properties": {
        "tag_id": {
          "type": "integer",
          "required": false,
          "example": 100,
          "x-nullable": true
        },
        "taggable_id": {
          "type": "integer",
          "required": false,
          "example": 123,
          "x-nullable": false
        },
        "taggable_type": {
          "type": "string",
          "required": false,
          "example": "TimeRange",
          "x-nullable": false
        },
        "time_range_appointment_id": {
          "type": "string",
          "required": false,
          "example": "lorem123",
          "x-nullable": true
        }
      }
    },
    "tag_association_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "tag_associations"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/tag_associations/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/tag_association_attributes"
            }
          }
        }
      }
    },
    "tag_association_post_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "tag_associations"
            },
            "attributes": {
              "$ref": "#/definitions/tag_association_post_attributes"
            }
          }
        }
      }
    },
    "tag_type_attributes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Ipsum",
          "x-nullable": false
        },
        "parent_id": {
          "type": "integer",
          "example": null,
          "x-nullable": true
        },
        "active_for_activities_at": {
          "type": "string",
          "example": "2021-01-28T12:30:00+00:00",
          "x-nullable": true
        },
        "active_for_time_ranges_at": {
          "type": "string",
          "example": "2021-01-29T09:00:00+00:00",
          "x-nullable": true
        }
      }
    },
    "tag_types_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "tag_types"
              },
              "link": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "example": "https://job-plan-stats.herokuapp.com/api/v1/tag_types/1"
                  }
                }
              },
              "attributes": {
                "$ref": "#/definitions/tag_type_attributes"
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tag_types?page[number]=1&page[size]=5"
            },
            "prev": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tag_types?page[number]=1&page[size]=5"
            },
            "next": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tag_types?page[number]=2&page[size]=5"
            },
            "last": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/tag_types?page[number]=5&page[size]=5"
            }
          }
        }
      }
    },
    "tag_type_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "tag_types"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/tag_types/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/tag_type_attributes"
            }
          }
        }
      }
    },
    "tag_type_post_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "tag_types"
            },
            "attributes": {
              "$ref": "#/definitions/tag_type_attributes"
            }
          }
        }
      }
    },
    "tag_type_patch_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "tag_types"
            },
            "attributes": {
              "$ref": "#/definitions/tag_type_attributes"
            }
          }
        }
      }
    },
    "time_range_attributes": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "string",
          "required": true,
          "example": "2021-01-22T09:00:00+00:00",
          "x-nullable": false
        },
        "end_time": {
          "type": "string",
          "required": true,
          "example": "2021-01-22T09:45:00+00:00",
          "x-nullable": false
        },
        "user_id": {
          "type": "integer",
          "required": false,
          "example": 123,
          "x-nullable": false
        },
        "minutes_worked": {
          "type": "integer",
          "required": true,
          "example": 45,
          "x-nullable": false
        },
        "time_range_type_id": {
          "type": "integer",
          "required": false,
          "example": 1,
          "x-nullable": false
        },
        "appointment_id": {
          "type": "string",
          "required": false,
          "example": "33445566",
          "x-nullable": true
        }
      }
    },
    "time_range_attributes_with_user_epr_uuid": {
      "type": "object",
      "properties": {
        "start_time": {
          "type": "string",
          "required": true,
          "example": "2021-01-22T09:00:00+00:00",
          "x-nullable": false
        },
        "end_time": {
          "type": "string",
          "required": true,
          "example": "2021-01-22T09:45:00+00:00",
          "x-nullable": false
        },
        "user_id": {
          "type": "integer",
          "required": false,
          "example": 123,
          "x-nullable": false
        },
        "minutes_worked": {
          "type": "integer",
          "required": true,
          "example": 45,
          "x-nullable": false
        },
        "time_range_type_id": {
          "type": "integer",
          "required": false,
          "example": 1,
          "x-nullable": false
        },
        "appointment_id": {
          "type": "string",
          "required": false,
          "example": "33445566",
          "x-nullable": true
        },
        "user_epr_uuid": {
          "type": "string",
          "example": "01234567890",
          "x-nullable": false
        }
      }
    },
    "time_ranges_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "time_ranges"
              },
              "link": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "example": "https://job-plan-stats.herokuapp.com/api/v1/time_ranges/1"
                  }
                }
              },
              "attributes": {
                "$ref": "#/definitions/time_range_attributes"
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/time_ranges?page[number]=1&page[size]=5"
            },
            "prev": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/time_ranges?page[number]=1&page[size]=5"
            },
            "next": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/time_ranges?page[number]=2&page[size]=5"
            },
            "last": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/time_ranges?page[number]=5&page[size]=5"
            }
          }
        }
      }
    },
    "time_range_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "time_ranges"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/time_ranges/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/time_range_attributes"
            }
          }
        }
      }
    },
    "time_range_response_with_relationships": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "time_ranges"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/time_ranges/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/time_range_attributes"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "tags": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "105"
                          },
                          "type": {
                            "type": "string",
                            "example": "tags"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "time_range_post_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "time_ranges"
            },
            "attributes": {
              "$ref": "#/definitions/time_range_attributes_with_user_epr_uuid"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "tags": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "105"
                          },
                          "type": {
                            "type": "string",
                            "example": "tags"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "user_attributes": {
      "type": "object",
      "properties": {
        "last_name": {
          "type": "string",
          "example": "Smith",
          "x-nullable": true
        },
        "first_name": {
          "type": "string",
          "example": "John",
          "x-nullable": true
        },
        "email": {
          "type": "string",
          "example": "john.smith@example.com",
          "x-nullable": false
        },
        "epr_uuid": {
          "type": "string",
          "example": "435f9dfe-4e89-4b5a-b63e-9095327c3a6b",
          "x-nullable": true
        },
        "admin": {
          "type": "boolean",
          "example": false,
          "x-nullable": false
        }
      }
    },
    "user_attributes_without_admin": {
      "type": "object",
      "properties": {
        "last_name": {
          "type": "string",
          "example": "Smith",
          "x-nullable": true
        },
        "first_name": {
          "type": "string",
          "example": "John",
          "x-nullable": true
        },
        "email": {
          "type": "string",
          "example": "john.smith@example.com",
          "x-nullable": false
        },
        "epr_uuid": {
          "type": "string",
          "example": "435f9dfe-4e89-4b5a-b63e-9095327c3a6b",
          "x-nullable": true
        }
      }
    },
    "user_attributes_with_password": {
      "type": "object",
      "properties": {
        "last_name": {
          "type": "string",
          "example": "Smith",
          "x-nullable": true
        },
        "first_name": {
          "type": "string",
          "example": "John",
          "x-nullable": true
        },
        "email": {
          "type": "string",
          "example": "john.smith@example.com",
          "x-nullable": false
        },
        "epr_uuid": {
          "type": "string",
          "example": "435f9dfe-4e89-4b5a-b63e-9095327c3a6b",
          "x-nullable": true
        },
        "password": {
          "type": "string",
          "example": "pA$$w0Rd",
          "x-nullable": true
        }
      }
    },
    "users_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "users"
              },
              "link": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "example": "https://job-plan-stats.herokuapp.com/api/v1/users/1"
                  }
                }
              },
              "attributes": {
                "$ref": "#/definitions/user_attributes"
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/users?page[number]=1&page[size]=5"
            },
            "prev": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/users?page[number]=1&page[size]=5"
            },
            "next": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/users?page[number]=2&page[size]=5"
            },
            "last": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/users?page[number]=5&page[size]=5"
            }
          }
        }
      }
    },
    "user_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "users"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/users/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/user_attributes"
            }
          }
        }
      }
    },
    "user_response_with_relationships": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "users"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/users/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/user_attributes"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "user_groups": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "303"
                          },
                          "type": {
                            "type": "string",
                            "example": "user_groups"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "user_post_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "users"
            },
            "attributes": {
              "$ref": "#/definitions/user_attributes_with_password"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "user_groups": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "303"
                          },
                          "type": {
                            "type": "string",
                            "example": "user_groups"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "user_patch_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "users"
            },
            "attributes": {
              "$ref": "#/definitions/user_attributes_with_password"
            },
            "relationships": {
              "type": "object",
              "properties": {
                "user_groups": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "303"
                          },
                          "type": {
                            "type": "string",
                            "example": "user_groups"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "user_patch_params_without_password": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "users"
            },
            "attributes": {
              "$ref": "#/definitions/user_attributes"
            }
          }
        }
      }
    },
    "user_group_attributes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Lorems",
          "x-nullable": false
        },
        "group_type_id": {
          "type": "integer",
          "example": 2,
          "x-nullable": false
        }
      }
    },
    "user_groups_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "user_groups"
              },
              "link": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "example": "https://job-plan-stats.herokuapp.com/api/v1/user_groups/1"
                  }
                }
              },
              "attributes": {
                "$ref": "#/definitions/user_group_attributes"
              }
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/user_groups?page[number]=1&page[size]=5"
            },
            "prev": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/user_groups?page[number]=1&page[size]=5"
            },
            "next": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/user_groups?page[number]=2&page[size]=5"
            },
            "last": {
              "type": "string",
              "example": "https://job-plan-stats.herokuapp.com/api/v1/user_groups?page[number]=5&page[size]=5"
            }
          }
        }
      }
    },
    "user_group_response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "1"
            },
            "type": {
              "type": "string",
              "example": "user_groups"
            },
            "link": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "example": "https://job-plan-stats.herokuapp.com/api/v1/user_groups/1"
                }
              }
            },
            "attributes": {
              "$ref": "#/definitions/user_group_attributes"
            }
          }
        }
      }
    },
    "user_group_post_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "user_groups"
            },
            "attributes": {
              "$ref": "#/definitions/user_group_attributes"
            }
          }
        }
      }
    },
    "user_group_patch_params": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "10"
            },
            "type": {
              "type": "string",
              "example": "user_groups"
            },
            "attributes": {
              "$ref": "#/definitions/user_group_attributes"
            }
          }
        }
      }
    }
  }
}